---
layout: post
title:  "ios多线程GCD分析 "
date:  2018-07-10 10:11:26 +0800
categories: none
---
> 多线程是oc的基础，近来有空，我便在此总结一下。

#1、GCD简介
Grand Central Dispatch(GCD) 是 Apple 开发的一个多核编程的较新的解决方法。它主要用于优化应用程序以支持多核处理器以及其他对称多处理系统。它是一个在线程池模式的基础上执行的并发任务。在 Mac OS X 10.6 雪豹中首次推出，也可在 iOS 4 及以上版本使用。
#2、GCD任务和队列
GCD有两个核心的概念：任务和队列。
任务：就是执行操作的意思，在GCD中代码是放在block中执行的，执行任务有两种方式：同步执行（sync）和异步执行（async）。
* 同步执行：同步添加任务到指定队列，在添加至队列的任务未完成时，会一直等待，直到队列里面的任务完成之后再继续执行；只能在当前线程中执行任务，不具备开启新线程的能力。
* 异步执行：异步添加任务到指定的队列，可以继续执行任务；可以在新的线程中执行任务，具备开启新线程的能力。
**值得注意的是，异步执行（async）虽然具有开启新线程的能力，但并不一定开启新线程。这根任务指定的队列类型有关。**
队列：队列是执行任务的等待队列，即用来存放任务的队列。队列是一种特殊的线性表，采用FIFO原则。
![](/images/2018-07-16-18-13-14.jpg)
在GCD中有两种队列：串行队列和并行队列。两者主要区别是：执行顺序不同，以及开启的线程数不同。
    * 串行队列：每次只有一个任务被执行。让任务一个接着一个执行。（只开启一个线程，一个任务执行完毕后，再执行下一个任务）
    * 并发队列：可以让多个任务并发（同时）执行。（可以开启多个线程，并且同时执行任务）
两者的具体区别如下。
![](/images/2018-07-16-18-17-10.jpg)
![](/images/2018-07-16-18-17-16.jpg)
##2.1、GCD任务及其创建
GCD的使用只有两步。
1. 创建一个队列（串行队列或者并行队列）
2. 将任务追加到任务的等待队列中，然后系统就会根据任务类型执行任务。（同步执行或异步执行）
##2.2、GCD队列及其创建
* 串行队列创建  
```objc
dispatch_queue_t queue = dispatch_queue_create("net.bujige.testQueue", DISPATCH_QUEUE_SERIAL);
```
* 并发队列创建
```objc
dispatch_queue_t queue = dispatch_queue_create("net.bujige.testQueue", DISPATCH_QUEUE_CONCURRENT);
```
* 主队列
```objc
dispatch_queue_t queue = dispatch_get_main_queue();
```
* 全局并发队列
```objc
dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
```
##2.3、GCD任务的创建
GCD提供了同步执行任务的创建方法`dispatch_sync`和异步执行任务的创建方法`dispatch_async`。
```objc
// 同步执行任务创建方法
dispatch_sync(queue, ^{
    // 这里放同步执行任务代码
});
// 异步执行任务创建方法
dispatch_async(queue, ^{
    // 这里放异步执行任务代码
});
```
#3、GCD基本使用方法
```table
区别    |    并发队列    |    串行队列    |    主队列
同步（sync）    |    没有开启新任务，串行执行任务    |    没有开启新线程，串行执行任务    |    主线程调用：死锁卡住不执行；其他线程调用：没有开启新线程，串行执行任务    
异步（async）    |    有开启新线程，并发执行任务    |    有开启新线程(1条)，串行执行任务    |    没有开启新线程，串行执行任务
```
##3.1、同步执行&并发队列
* 所有任务都是在当前线程（主线程）中执行的，没有开启新的线程（`同步执行`不具备开启新线程的能力）。
* 
##3.2、异步执行&并发队列
##3.3、同步执行&串行队列
##3.4、异步执行&串行队列
##3.5、同步执行&主队列
##3.6、异步执行&主队列
#4、GCD进程间通信
#5、GCD其他方法